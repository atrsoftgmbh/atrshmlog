#!/usr/bin/perl
#!/usr/local/bin/perl
#!/usr/pkg/bin/perl
#
# $Id:$
#
# check with files.txt the completeness of the distro
#
# we check not for unsupported and for the mksh demo code.
#
# we check for the two java references jdk 66 and 102
#
#
$infile = 'files.txt';

$success = 0;

$delimiter = '/';

%misses = ();

open(IN, $infile) or die "cannot open the $inflie for input.\n";

while (<IN>) {
  s:^[\s]*::;
  s:[\s]*$::;
    
   last if  m:^FILES$:;

  # ok. we are in now.
}

$directory  = '.';

while (<IN>) {
  s:^[\s]*::;
  s:[\s]*$::;
  # we skip comments
  s:^#.*::;
  
    last if  m:^FILESEND$:;

    next if $_ eq '';
    
    if (m:^DIRECTORY[\s]+(.*):) {
	my @f = split(/[\s]+/, $_);
	shift @f;
	$directory = '..' . $delimiter . &build_path(@f);
	next;
    }
    
    # ok. we are in now.

    my @f = split(/[\s]+/, $_);

    # we check if the thing is in a valid directory, then we use it.
    # if not we simply ignore.
    # empty element one menas no directory at all

    my $filename = shift @f;

    if ($#f > -1) {
	my $path = &build_path(@f);

	my $p = '..' . $delimiter . $path . $delimiter . $filename;

	if (! -r $p ) {
	    $misses{$p} = $filename;

	    $success = 1;
	} else {
	    print "found $filename in $p \n";
	}	
    } else {
	my $p = $directory . $delimiter . $filename;

	if (! -r $p ) {
	    $misses{$p} = $filename;

	    $success = 1;
	} else {
	    print "found $filename in $p \n";
	}	
    }
}

close IN;

if ($success == 0) {
    print "\n all files found. check ok.\n";
    exit ($success);
}

print "FOUND misses : \n";

foreach my $k (sort keys %misses) {
    print "\t$k \n";
}

print "\n check NOT ok.\n";

exit(1);

# end of main. 

sub build_path {
    my @f = @_;

    my $tp = shift @f;

    if ( ! -d ('..' . $delimiter . $tp) ) {
	return 'INVALID';
    }
    
    foreach my $d (@f) {
	$tp .= $delimiter . $d;

	
	if (! -d ('..' . $delimiter . $tp) ) {
	    print "Directory not accessible for $tp.\n";
	    return 'INVALID';
	}
    }

    return $tp;
}
